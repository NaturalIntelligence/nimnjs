'use strict'; // code generated by pbf v3.1.0

var Frequency = exports.Frequency = {
    "LOW": {
        "value": 1,
        "options": {}
    },
    "MEDIUM": {
        "value": 2,
        "options": {}
    },
    "HIGH": {
        "value": 3,
        "options": {}
    }
};

// Signals ========================================

var Signals = exports.Signals = {};

Signals.read = function (pbf, end) {
    return pbf.readFields(Signals._readField, {name: "", features: {}, salary: 0}, end);
};
Signals._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.name = pbf.readString();
    else if (tag === 2)  { var entry = Signals._FieldEntry2.read(pbf, pbf.readVarint() + pbf.pos); obj.features[entry.key] = entry.value; }
    else if (tag === 3) obj.salary = pbf.readFloat();
};
Signals.write = function (obj, pbf) {
    if (obj.name) pbf.writeStringField(1, obj.name);
    if (obj.features) for (var i in obj.features) if (Object.prototype.hasOwnProperty.call(obj.features, i)) pbf.writeMessage(2, Signals._FieldEntry2.write, { key: i, value: obj.features[i] });
    if (obj.salary) pbf.writeFloatField(3, obj.salary);
};

// Signals._FieldEntry2 ========================================

Signals._FieldEntry2 = {};

Signals._FieldEntry2.read = function (pbf, end) {
    return pbf.readFields(Signals._FieldEntry2._readField, {key: "", value: ""}, end);
};
Signals._FieldEntry2._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.key = pbf.readString();
    else if (tag === 2) obj.value = pbf.readString();
};
Signals._FieldEntry2.write = function (obj, pbf) {
    if (obj.key) pbf.writeStringField(1, obj.key);
    if (obj.value) pbf.writeStringField(2, obj.value);
};
