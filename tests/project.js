'use strict'; // code generated by pbf v3.1.0

// ProjectDetail ========================================

var ProjectDetail = exports.ProjectDetail = {};

ProjectDetail.read = function (pbf, end) {
    return pbf.readFields(ProjectDetail._readField, {name: "", age: 0, male: false}, end);
};
ProjectDetail._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.name = pbf.readString();
    else if (tag === 2) obj.age = pbf.readVarint(true);
    else if (tag === 3) obj.male = pbf.readBoolean();
};
ProjectDetail.write = function (obj, pbf) {
    if (obj.name) pbf.writeStringField(1, obj.name);
    if (obj.age) pbf.writeVarintField(2, obj.age);
    if (obj.male) pbf.writeBooleanField(3, obj.male);
};

// Person ========================================

var Person = exports.Person = {};

Person.read = function (pbf, end) {
    return pbf.readFields(Person._readField, {name: "", projectDetail: []}, end);
};
Person._readField = function (tag, obj, pbf) {
    if (tag === 2) obj.name = pbf.readString();
    else if (tag === 1) obj.projectDetail.push(ProjectDetail.read(pbf, pbf.readVarint() + pbf.pos));
};
Person.write = function (obj, pbf) {
    if (obj.name) pbf.writeStringField(2, obj.name);
    if (obj.projectDetail) for (var i = 0; i < obj.projectDetail.length; i++) pbf.writeMessage(1, ProjectDetail.write, obj.projectDetail[i]);
};

// People ========================================

var People = exports.People = {};

People.read = function (pbf, end) {
    return pbf.readFields(People._readField, {person: []}, end);
};
People._readField = function (tag, obj, pbf) {
    if (tag === 1) obj.person.push(Person.read(pbf, pbf.readVarint() + pbf.pos));
};
People.write = function (obj, pbf) {
    if (obj.person) for (var i = 0; i < obj.person.length; i++) pbf.writeMessage(1, Person.write, obj.person[i]);
};

// Signals ========================================

var Signals = exports.Signals = {};

Signals.read = function (pbf, end) {
    return pbf.readFields(Signals._readField, {signal: []}, end);
};
Signals._readField = function (tag, obj, pbf) {
    if (tag === 1) pbf.readPackedFloat(obj.signal);
};
Signals.write = function (obj, pbf) {
    if (obj.signal) pbf.writePackedFloat(1, obj.signal);
};
